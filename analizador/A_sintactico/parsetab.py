
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARISTA COMMA ELIMINAR_ARISTA ELIMINAR_NODO ID LPAREN NODO NO_D NUMBER PESO RPAREN RUTA_MINIMA SEMICOLONprograma : declaracionesdeclaraciones : declaraciones declaracion SEMICOLON\n| declaracion SEMICOLONdeclaracion : NODO LPAREN ID RPARENdeclaracion : ELIMINAR_NODO LPAREN ID RPARENdeclaracion : ARISTA LPAREN ID COMMA ID RPAREN\n| ARISTA LPAREN ID COMMA ID COMMA NO_D RPARENdeclaracion : ELIMINAR_ARISTA LPAREN ID COMMA ID RPARENdeclaracion : PESO LPAREN ID COMMA ID COMMA NUMBER RPARENdeclaracion : RUTA_MINIMA LPAREN ID COMMA ID RPAREN'
    
_lr_action_items = {'NODO':([0,2,11,18,],[4,4,-3,-2,]),'ELIMINAR_NODO':([0,2,11,18,],[5,5,-3,-2,]),'ARISTA':([0,2,11,18,],[6,6,-3,-2,]),'ELIMINAR_ARISTA':([0,2,11,18,],[7,7,-3,-2,]),'PESO':([0,2,11,18,],[8,8,-3,-2,]),'RUTA_MINIMA':([0,2,11,18,],[9,9,-3,-2,]),'$end':([1,2,11,18,],[0,-1,-3,-2,]),'SEMICOLON':([3,10,25,26,36,37,39,42,43,],[11,18,-4,-5,-6,-8,-10,-7,-9,]),'LPAREN':([4,5,6,7,8,9,],[12,13,14,15,16,17,]),'ID':([12,13,14,15,16,17,27,28,29,30,],[19,20,21,22,23,24,31,32,33,34,]),'RPAREN':([19,20,31,32,34,40,41,],[25,26,36,37,39,42,43,]),'COMMA':([21,22,23,24,31,33,],[27,28,29,30,35,38,]),'NO_D':([35,],[40,]),'NUMBER':([38,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([0,],[2,]),'declaracion':([0,2,],[3,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaraciones','programa',1,'p_programa','parser.py',10),
  ('declaraciones -> declaraciones declaracion SEMICOLON','declaraciones',3,'p_declaraciones','parser.py',15),
  ('declaraciones -> declaracion SEMICOLON','declaraciones',2,'p_declaraciones','parser.py',16),
  ('declaracion -> NODO LPAREN ID RPAREN','declaracion',4,'p_declaracion_nodo','parser.py',21),
  ('declaracion -> ELIMINAR_NODO LPAREN ID RPAREN','declaracion',4,'p_declaracion_eliminar_nodo','parser.py',25),
  ('declaracion -> ARISTA LPAREN ID COMMA ID RPAREN','declaracion',6,'p_declaracion_arista','parser.py',29),
  ('declaracion -> ARISTA LPAREN ID COMMA ID COMMA NO_D RPAREN','declaracion',8,'p_declaracion_arista','parser.py',30),
  ('declaracion -> ELIMINAR_ARISTA LPAREN ID COMMA ID RPAREN','declaracion',6,'p_declaracion_eliminar_arista','parser.py',37),
  ('declaracion -> PESO LPAREN ID COMMA ID COMMA NUMBER RPAREN','declaracion',8,'p_declaracion_peso','parser.py',41),
  ('declaracion -> RUTA_MINIMA LPAREN ID COMMA ID RPAREN','declaracion',6,'p_declaracion_ruta_minima','parser.py',45),
]
